name: Auto Label

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  label:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Label based on changed files
        uses: actions/labeler@v5
        if: github.event_name == 'pull_request'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
      
      - name: Label based on branch name
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const branch = context.payload.pull_request.head.ref;
            const labels = [];
            
            if (branch.startsWith('feat/')) labels.push('enhancement');
            if (branch.startsWith('fix/')) labels.push('bug');
            if (branch.startsWith('docs/')) labels.push('documentation');
            if (branch.startsWith('build/')) labels.push('build');
            if (branch.startsWith('ci/')) labels.push('ci');
            if (branch.startsWith('chore/')) labels.push('maintenance');
            if (branch.startsWith('perf/')) labels.push('performance');
            if (branch.startsWith('refactor/')) labels.push('refactor');
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: labels
              });
            }
      
      - name: Label based on issue title
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.issue.title.toLowerCase();
            const body = (context.payload.issue.body || '').toLowerCase();
            const labels = [];
            
            // Priority labels
            if (title.includes('urgent') || title.includes('critical')) labels.push('priority: high');
            if (title.includes('phase 1') || body.includes('phase 1')) labels.push('phase: 1');
            if (title.includes('phase 2') || body.includes('phase 2')) labels.push('phase: 2');
            
            // Area labels
            if (title.includes('pipeline') || title.includes('deployment')) labels.push('area: deployment');
            if (title.includes('container') || title.includes('docker') || title.includes('image')) labels.push('area: containers');
            if (title.includes('service')) labels.push('area: services');
            if (title.includes('infra')) labels.push('area: infrastructure');
            if (title.includes('docs') || title.includes('documentation')) labels.push('documentation');
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: labels
              });
            }
